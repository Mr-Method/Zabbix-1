#!/bin/env perl
# This program was designed to work with Zabbix to keep monitored MySQL databases.
# Copyright (C) 2012 Wilmer Jaramillo M. <wilmer@fedoraproject.org>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

use strict;
use DBI;
use Getopt::Long;
use Sys::Hostname;

my ($database, $user, $pass, $help);
my $hostname = '127.0.0.1';

my %querys = (

	"Aborted_clients"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Aborted_clients'},
	"Aborted_connects"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Aborted_connects'},
	"Binlog_cache_disk_use"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Binlog_cache_disk_use'},
	"Binlog_cache_use"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Binlog_cache_use'},
	"Bytes_received"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Bytes_received'},
	"Bytes_sent"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Bytes_sent'},
	"Com_admin_commands"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_admin_commands'},
	"Com_alter_db"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_alter_db'},
	"Com_alter_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_alter_table'},
	"Com_analyze"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_analyze'},
	"Com_backup_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_backup_table'},
	"Com_begin"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_begin'},
	"Com_change_db"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_change_db'},
	"Com_change_master"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_change_master'},
	"Com_check"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_check'},
	"Com_checksum"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_checksum'},
	"Com_commit"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_commit'},
	"Com_create_db"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_create_db'},
	"Com_create_function"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_create_function'},
	"Com_create_index"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_create_index'},
	"Com_create_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_create_table'},
	"Com_create_user"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_create_user'},
	"Com_dealloc_sql"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_dealloc_sql'},
	"Com_delete"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_delete'},
	"Com_delete_multi"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_delete_multi'},
	"Com_do"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_do'},
	"Com_drop_db"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_drop_db'},
	"Com_drop_function"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_drop_function'},
	"Com_drop_index"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_drop_index'},
	"Com_drop_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_drop_table'},
	"Com_drop_user"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_drop_user'},
	"Com_execute_sql"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_execute_sql'},
	"Com_flush"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_flush'},
	"Com_grant"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_grant'},
	"Com_ha_close"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_ha_close'},
	"Com_ha_open"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_ha_open'},
	"Com_help"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_help'},
	"Com_insert"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_insert'},
	"Com_insert_select"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_insert_select'},
	"Com_kill"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_kill'},
	"Com_load"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_load'},
	"Com_load_master_data"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_load_master_data'},
	"Com_load_master_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_load_master_table'},
	"Com_lock_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_lock_tables'},
	"Com_optimize"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_optimize'},
	"Com_preload_keys"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_preload_keys'},
	"Com_prepare_sql"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_prepare_sql'},
	"Com_purge"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_purge'},
	"Com_purge_before_date"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_purge_before_date'},
	"Com_rename_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_rename_table'},
	"Com_repair"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_repair'},
	"Com_replace"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_replace'},
	"Com_replace_select"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_replace_select'},
	"Com_reset"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_reset'},
	"Com_restore_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_restore_table'},
	"Com_revoke"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_revoke'},
	"Com_revoke_all"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_revoke_all'},
	"Com_rollback"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_rollback'},
	"Com_savepoint"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_savepoint'},
	"Com_select"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_select'},
	"Com_set_option"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_set_option'},
	"Com_show_binlog_events"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_binlog_events'},
	"Com_show_binlogs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_binlogs'},
	"Com_show_charsets"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_charsets'},
	"Com_show_collations"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_collations'},
	"Com_show_column_types"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_column_types'},
	"Com_show_create_db"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_create_db'},
	"Com_show_create_table"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_create_table'},
	"Com_show_databases"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_databases'},
	"Com_show_errors"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_errors'},
	"Com_show_fields"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_fields'},
	"Com_show_grants"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_grants'},
	"Com_show_innodb_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_innodb_status'},
	"Com_show_keys"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_keys'},
	"Com_show_logs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_logs'},
	"Com_show_master_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_master_status'},
	"Com_show_ndb_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_ndb_status'},
	"Com_show_new_master"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_new_master'},
	"Com_show_open_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_open_tables'},
	"Com_show_privileges"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_privileges'},
	"Com_show_processlist"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_processlist'},
	"Com_show_slave_hosts"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_slave_hosts'},
	"Com_show_slave_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_slave_status'},
	"Com_show_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_status'},
	"Com_show_storage_engines"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_storage_engines'},
	"Com_show_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_tables'},
	"Com_show_triggers"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_triggers'},
	"Com_show_variables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_variables'},
	"Com_show_warnings"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_show_warnings'},
	"Com_slave_start"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_slave_start'},
	"Com_slave_stop"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_slave_stop'},
	"Com_stmt_close"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_close'},
	"Com_stmt_execute"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_execute'},
	"Com_stmt_fetch"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_fetch'},
	"Com_stmt_prepare"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_prepare'},
	"Com_stmt_reset"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_reset'},
	"Com_stmt_send_long_data"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_stmt_send_long_data'},
	"Com_truncate"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_truncate'},
	"Com_unlock_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_unlock_tables'},
	"Com_update"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_update'},
	"Com_update_multi"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_update_multi'},
	"Com_xa_commit"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_commit'},
	"Com_xa_end"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_end'},
	"Com_xa_prepare"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_prepare'},
	"Com_xa_recover"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_recover'},
	"Com_xa_rollback"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_rollback'},
	"Com_xa_start"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Com_xa_start'},
	"Compression"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Compression'},
	"Connections"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Connections'},
	"Created_tmp_disk_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Created_tmp_disk_tables'},
	"Created_tmp_files"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Created_tmp_files'},
	"Created_tmp_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Created_tmp_tables'},
	"Delayed_errors"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Delayed_errors'},
	"Delayed_insert_threads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Delayed_insert_threads'},
	"Delayed_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Delayed_writes'},
	"Flush_commands"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Flush_commands'},
	"Handler_commit"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_commit'},
	"Handler_delete"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_delete'},
	"Handler_discover"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_discover'},
	"Handler_prepare"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_prepare'},
	"Handler_read_first"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_first'},
	"Handler_read_key"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_key'},
	"Handler_read_next"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_next'},
	"Handler_read_prev"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_prev'},
	"Handler_read_rnd"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_rnd'},
	"Handler_read_rnd_next"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_read_rnd_next'},
	"Handler_rollback"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_rollback'},
	"Handler_savepoint"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_savepoint'},
	"Handler_savepoint_rollback"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_savepoint_rollback'},
	"Handler_update"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_update'},
	"Handler_write"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Handler_write'},
	"Innodb_buffer_pool_pages_data"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_data'},
	"Innodb_buffer_pool_pages_dirty"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_dirty'},
	"Innodb_buffer_pool_pages_flushed"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_flushed'},
	"Innodb_buffer_pool_pages_free"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_free'},
	"Innodb_buffer_pool_pages_misc"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_misc'},
	"Innodb_buffer_pool_pages_total"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_pages_total'},
	"Innodb_buffer_pool_read_ahead_rnd"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_read_ahead_rnd'},
	"Innodb_buffer_pool_read_ahead_seq"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_read_ahead_seq'},
	"Innodb_buffer_pool_read_requests"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_read_requests'},
	"Innodb_buffer_pool_reads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_reads'},
	"Innodb_buffer_pool_wait_free"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_wait_free'},
	"Innodb_buffer_pool_write_requests"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_buffer_pool_write_requests'},
	"Innodb_data_fsyncs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_fsyncs'},
	"Innodb_data_pending_fsyncs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_pending_fsyncs'},
	"Innodb_data_pending_reads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_pending_reads'},
	"Innodb_data_pending_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_pending_writes'},
	"Innodb_data_read"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_read'},
	"Innodb_data_reads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_reads'},
	"Innodb_data_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_writes'},
	"Innodb_data_written"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_data_written'},
	"Innodb_dblwr_pages_written"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_dblwr_pages_written'},
	"Innodb_dblwr_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_dblwr_writes'},
	"Innodb_log_waits"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_log_waits'},
	"Innodb_log_write_requests"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_log_write_requests'},
	"Innodb_log_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_log_writes'},
	"Innodb_os_log_fsyncs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_os_log_fsyncs'},
	"Innodb_os_log_pending_fsyncs"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_os_log_pending_fsyncs'},
	"Innodb_os_log_pending_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_os_log_pending_writes'},
	"Innodb_os_log_written"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_os_log_written'},
	"Innodb_page_size"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_page_size'},
	"Innodb_pages_created"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_pages_created'},
	"Innodb_pages_read"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_pages_read'},
	"Innodb_pages_written"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_pages_written'},
	"Innodb_row_lock_current_waits"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_row_lock_current_waits'},
	"Innodb_row_lock_time"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_row_lock_time'},
	"Innodb_row_lock_time_avg"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_row_lock_time_avg'},
	"Innodb_row_lock_time_max"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_row_lock_time_max'},
	"Innodb_row_lock_waits"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_row_lock_waits'},
	"Innodb_rows_deleted"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_rows_deleted'},
	"Innodb_rows_inserted"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_rows_inserted'},
	"Innodb_rows_read"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_rows_read'},
	"Innodb_rows_updated"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Innodb_rows_updated'},
	"Key_blocks_not_flushed"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_blocks_not_flushed'},
	"Key_blocks_unused"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_blocks_unused'},
	"Key_blocks_used"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_blocks_used'},
	"Key_read_requests"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_read_requests'},
	"Key_reads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_reads'},
	"Key_write_requests"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_write_requests'},
	"Key_writes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Key_writes'},
	"Last_query_cost"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Last_query_cost'},
	"Max_used_connections"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Max_used_connections'},
	"Ndb_cluster_node_id"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Ndb_cluster_node_id'},
	"Ndb_config_from_host"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Ndb_config_from_host'},
	"Ndb_config_from_port"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Ndb_config_from_port'},
	"Ndb_number_of_data_nodes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Ndb_number_of_data_nodes'},
	"Not_flushed_delayed_rows"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Not_flushed_delayed_rows'},
	"Open_files"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Open_files'},
	"Open_streams"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Open_streams'},
	"Open_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Open_tables'},
	"Opened_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Opened_tables'},
	"Prepared_stmt_count"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Prepared_stmt_count'},
	"Qcache_free_blocks"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_free_blocks'},
	"Qcache_free_memory"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_free_memory'},
	"Qcache_hits"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_hits'},
	"Qcache_inserts"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_inserts'},
	"Qcache_lowmem_prunes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_lowmem_prunes'},
	"Qcache_not_cached"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_not_cached'},
	"Qcache_queries_in_cache"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_queries_in_cache'},
	"Qcache_total_blocks"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Qcache_total_blocks'},
	"Questions"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Questions'},
	"Rpl_status"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Rpl_status'},
	"Select_full_join"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Select_full_join'},
	"Select_full_range_join"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Select_full_range_join'},
	"Select_range"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Select_range'},
	"Select_range_check"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Select_range_check'},
	"Select_scan"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Select_scan'},
	"Slave_open_temp_tables"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Slave_open_temp_tables'},
	"Slave_retried_transactions"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Slave_retried_transactions'},
	"Slave_running"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Slave_running'},
	"Slow_launch_threads"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Slow_launch_threads'},
	"Slow_queries"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Slow_queries'},
	"Sort_merge_passes"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Sort_merge_passes'},
	"Sort_range"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Sort_range'},
	"Sort_rows"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Sort_rows'},
	"Sort_scan"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Sort_scan'},
	"Table_locks_immediate"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Table_locks_immediate'},
	"Table_locks_waited"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Table_locks_waited'},
	"Tc_log_max_pages_used"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Tc_log_max_pages_used'},
	"Tc_log_page_size"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Tc_log_page_size'},
	"Tc_log_page_waits"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Tc_log_page_waits'},
	"Threads_cached"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Threads_cached'},
	"Threads_connected"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Threads_connected'},
	"Threads_created"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Threads_created'},
	"Threads_running"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Threads_running'},
	"Uptime"  => qq{SHOW GLOBAL STATUS WHERE Variable_name = 'Uptime'},
);

GetOptions(
	'help!'     =>  \&usage,
	'user=s'    =>  \$user,
	'pass=s'    =>  \$pass,
	'database=s'    =>  \$database,
	'Aborted_clients' => sub { print query_database($querys{Aborted_clients}) },
	'Aborted_connects' => sub { print query_database($querys{Aborted_connects}) },
	'Binlog_cache_disk_use' => sub { print query_database($querys{Binlog_cache_disk_use}) },
	'Binlog_cache_use' => sub { print query_database($querys{Binlog_cache_use}) },
	'Bytes_received' => sub { print query_database($querys{Bytes_received}) },
	'Bytes_sent' => sub { print query_database($querys{Bytes_sent}) },
	'Com_admin_commands' => sub { print query_database($querys{Com_admin_commands}) },
	'Com_alter_db' => sub { print query_database($querys{Com_alter_db}) },
	'Com_alter_table' => sub { print query_database($querys{Com_alter_table}) },
	'Com_analyze' => sub { print query_database($querys{Com_analyze}) },
	'Com_backup_table' => sub { print query_database($querys{Com_backup_table}) },
	'Com_begin' => sub { print query_database($querys{Com_begin}) },
	'Com_change_db' => sub { print query_database($querys{Com_change_db}) },
	'Com_change_master' => sub { print query_database($querys{Com_change_master}) },
	'Com_check' => sub { print query_database($querys{Com_check}) },
	'Com_checksum' => sub { print query_database($querys{Com_checksum}) },
	'Com_commit' => sub { print query_database($querys{Com_commit}) },
	'Com_create_db' => sub { print query_database($querys{Com_create_db}) },
	'Com_create_function' => sub { print query_database($querys{Com_create_function}) },
	'Com_create_index' => sub { print query_database($querys{Com_create_index}) },
	'Com_create_table' => sub { print query_database($querys{Com_create_table}) },
	'Com_create_user' => sub { print query_database($querys{Com_create_user}) },
	'Com_dealloc_sql' => sub { print query_database($querys{Com_dealloc_sql}) },
	'Com_delete' => sub { print query_database($querys{Com_delete}) },
	'Com_delete_multi' => sub { print query_database($querys{Com_delete_multi}) },
	'Com_do' => sub { print query_database($querys{Com_do}) },
	'Com_drop_db' => sub { print query_database($querys{Com_drop_db}) },
	'Com_drop_function' => sub { print query_database($querys{Com_drop_function}) },
	'Com_drop_index' => sub { print query_database($querys{Com_drop_index}) },
	'Com_drop_table' => sub { print query_database($querys{Com_drop_table}) },
	'Com_drop_user' => sub { print query_database($querys{Com_drop_user}) },
	'Com_execute_sql' => sub { print query_database($querys{Com_execute_sql}) },
	'Com_flush' => sub { print query_database($querys{Com_flush}) },
	'Com_grant' => sub { print query_database($querys{Com_grant}) },
	'Com_ha_close' => sub { print query_database($querys{Com_ha_close}) },
	'Com_ha_open' => sub { print query_database($querys{Com_ha_open}) },
	'Com_help' => sub { print query_database($querys{Com_help}) },
	'Com_insert' => sub { print query_database($querys{Com_insert}) },
	'Com_insert_select' => sub { print query_database($querys{Com_insert_select}) },
	'Com_kill' => sub { print query_database($querys{Com_kill}) },
	'Com_load' => sub { print query_database($querys{Com_load}) },
	'Com_load_master_data' => sub { print query_database($querys{Com_load_master_data}) },
	'Com_load_master_table' => sub { print query_database($querys{Com_load_master_table}) },
	'Com_lock_tables' => sub { print query_database($querys{Com_lock_tables}) },
	'Com_optimize' => sub { print query_database($querys{Com_optimize}) },
	'Com_preload_keys' => sub { print query_database($querys{Com_preload_keys}) },
	'Com_prepare_sql' => sub { print query_database($querys{Com_prepare_sql}) },
	'Com_purge' => sub { print query_database($querys{Com_purge}) },
	'Com_purge_before_date' => sub { print query_database($querys{Com_purge_before_date}) },
	'Com_rename_table' => sub { print query_database($querys{Com_rename_table}) },
	'Com_repair' => sub { print query_database($querys{Com_repair}) },
	'Com_replace' => sub { print query_database($querys{Com_replace}) },
	'Com_replace_select' => sub { print query_database($querys{Com_replace_select}) },
	'Com_reset' => sub { print query_database($querys{Com_reset}) },
	'Com_restore_table' => sub { print query_database($querys{Com_restore_table}) },
	'Com_revoke' => sub { print query_database($querys{Com_revoke}) },
	'Com_revoke_all' => sub { print query_database($querys{Com_revoke_all}) },
	'Com_rollback' => sub { print query_database($querys{Com_rollback}) },
	'Com_savepoint' => sub { print query_database($querys{Com_savepoint}) },
	'Com_select' => sub { print query_database($querys{Com_select}) },
	'Com_set_option' => sub { print query_database($querys{Com_set_option}) },
	'Com_show_binlog_events' => sub { print query_database($querys{Com_show_binlog_events}) },
	'Com_show_binlogs' => sub { print query_database($querys{Com_show_binlogs}) },
	'Com_show_charsets' => sub { print query_database($querys{Com_show_charsets}) },
	'Com_show_collations' => sub { print query_database($querys{Com_show_collations}) },
	'Com_show_column_types' => sub { print query_database($querys{Com_show_column_types}) },
	'Com_show_create_db' => sub { print query_database($querys{Com_show_create_db}) },
	'Com_show_create_table' => sub { print query_database($querys{Com_show_create_table}) },
	'Com_show_databases' => sub { print query_database($querys{Com_show_databases}) },
	'Com_show_errors' => sub { print query_database($querys{Com_show_errors}) },
	'Com_show_fields' => sub { print query_database($querys{Com_show_fields}) },
	'Com_show_grants' => sub { print query_database($querys{Com_show_grants}) },
	'Com_show_innodb_status' => sub { print query_database($querys{Com_show_innodb_status}) },
	'Com_show_keys' => sub { print query_database($querys{Com_show_keys}) },
	'Com_show_logs' => sub { print query_database($querys{Com_show_logs}) },
	'Com_show_master_status' => sub { print query_database($querys{Com_show_master_status}) },
	'Com_show_ndb_status' => sub { print query_database($querys{Com_show_ndb_status}) },
	'Com_show_new_master' => sub { print query_database($querys{Com_show_new_master}) },
	'Com_show_open_tables' => sub { print query_database($querys{Com_show_open_tables}) },
	'Com_show_privileges' => sub { print query_database($querys{Com_show_privileges}) },
	'Com_show_processlist' => sub { print query_database($querys{Com_show_processlist}) },
	'Com_show_slave_hosts' => sub { print query_database($querys{Com_show_slave_hosts}) },
	'Com_show_slave_status' => sub { print query_database($querys{Com_show_slave_status}) },
	'Com_show_status' => sub { print query_database($querys{Com_show_status}) },
	'Com_show_storage_engines' => sub { print query_database($querys{Com_show_storage_engines}) },
	'Com_show_tables' => sub { print query_database($querys{Com_show_tables}) },
	'Com_show_triggers' => sub { print query_database($querys{Com_show_triggers}) },
	'Com_show_variables' => sub { print query_database($querys{Com_show_variables}) },
	'Com_show_warnings' => sub { print query_database($querys{Com_show_warnings}) },
	'Com_slave_start' => sub { print query_database($querys{Com_slave_start}) },
	'Com_slave_stop' => sub { print query_database($querys{Com_slave_stop}) },
	'Com_stmt_close' => sub { print query_database($querys{Com_stmt_close}) },
	'Com_stmt_execute' => sub { print query_database($querys{Com_stmt_execute}) },
	'Com_stmt_fetch' => sub { print query_database($querys{Com_stmt_fetch}) },
	'Com_stmt_prepare' => sub { print query_database($querys{Com_stmt_prepare}) },
	'Com_stmt_reset' => sub { print query_database($querys{Com_stmt_reset}) },
	'Com_stmt_send_long_data' => sub { print query_database($querys{Com_stmt_send_long_data}) },
	'Com_truncate' => sub { print query_database($querys{Com_truncate}) },
	'Com_unlock_tables' => sub { print query_database($querys{Com_unlock_tables}) },
	'Com_update' => sub { print query_database($querys{Com_update}) },
	'Com_update_multi' => sub { print query_database($querys{Com_update_multi}) },
	'Com_xa_commit' => sub { print query_database($querys{Com_xa_commit}) },
	'Com_xa_end' => sub { print query_database($querys{Com_xa_end}) },
	'Com_xa_prepare' => sub { print query_database($querys{Com_xa_prepare}) },
	'Com_xa_recover' => sub { print query_database($querys{Com_xa_recover}) },
	'Com_xa_rollback' => sub { print query_database($querys{Com_xa_rollback}) },
	'Com_xa_start' => sub { print query_database($querys{Com_xa_start}) },
	'Compression' => sub { print query_database($querys{Compression}) },
	'Connections' => sub { print query_database($querys{Connections}) },
	'Created_tmp_disk_tables' => sub { print query_database($querys{Created_tmp_disk_tables}) },
	'Created_tmp_files' => sub { print query_database($querys{Created_tmp_files}) },
	'Created_tmp_tables' => sub { print query_database($querys{Created_tmp_tables}) },
	'Delayed_errors' => sub { print query_database($querys{Delayed_errors}) },
	'Delayed_insert_threads' => sub { print query_database($querys{Delayed_insert_threads}) },
	'Delayed_writes' => sub { print query_database($querys{Delayed_writes}) },
	'Flush_commands' => sub { print query_database($querys{Flush_commands}) },
	'Handler_commit' => sub { print query_database($querys{Handler_commit}) },
	'Handler_delete' => sub { print query_database($querys{Handler_delete}) },
	'Handler_discover' => sub { print query_database($querys{Handler_discover}) },
	'Handler_prepare' => sub { print query_database($querys{Handler_prepare}) },
	'Handler_read_first' => sub { print query_database($querys{Handler_read_first}) },
	'Handler_read_key' => sub { print query_database($querys{Handler_read_key}) },
	'Handler_read_next' => sub { print query_database($querys{Handler_read_next}) },
	'Handler_read_prev' => sub { print query_database($querys{Handler_read_prev}) },
	'Handler_read_rnd' => sub { print query_database($querys{Handler_read_rnd}) },
	'Handler_read_rnd_next' => sub { print query_database($querys{Handler_read_rnd_next}) },
	'Handler_rollback' => sub { print query_database($querys{Handler_rollback}) },
	'Handler_savepoint' => sub { print query_database($querys{Handler_savepoint}) },
	'Handler_savepoint_rollback' => sub { print query_database($querys{Handler_savepoint_rollback}) },
	'Handler_update' => sub { print query_database($querys{Handler_update}) },
	'Handler_write' => sub { print query_database($querys{Handler_write}) },
	'Innodb_buffer_pool_pages_data' => sub { print query_database($querys{Innodb_buffer_pool_pages_data}) },
	'Innodb_buffer_pool_pages_dirty' => sub { print query_database($querys{Innodb_buffer_pool_pages_dirty}) },
	'Innodb_buffer_pool_pages_flushed' => sub { print query_database($querys{Innodb_buffer_pool_pages_flushed}) },
	'Innodb_buffer_pool_pages_free' => sub { print query_database($querys{Innodb_buffer_pool_pages_free}) },
	'Innodb_buffer_pool_pages_misc' => sub { print query_database($querys{Innodb_buffer_pool_pages_misc}) },
	'Innodb_buffer_pool_pages_total' => sub { print query_database($querys{Innodb_buffer_pool_pages_total}) },
	'Innodb_buffer_pool_read_ahead_rnd' => sub { print query_database($querys{Innodb_buffer_pool_read_ahead_rnd}) },
	'Innodb_buffer_pool_read_ahead_seq' => sub { print query_database($querys{Innodb_buffer_pool_read_ahead_seq}) },
	'Innodb_buffer_pool_read_requests' => sub { print query_database($querys{Innodb_buffer_pool_read_requests}) },
	'Innodb_buffer_pool_reads' => sub { print query_database($querys{Innodb_buffer_pool_reads}) },
	'Innodb_buffer_pool_wait_free' => sub { print query_database($querys{Innodb_buffer_pool_wait_free}) },
	'Innodb_buffer_pool_write_requests' => sub { print query_database($querys{Innodb_buffer_pool_write_requests}) },
	'Innodb_data_fsyncs' => sub { print query_database($querys{Innodb_data_fsyncs}) },
	'Innodb_data_pending_fsyncs' => sub { print query_database($querys{Innodb_data_pending_fsyncs}) },
	'Innodb_data_pending_reads' => sub { print query_database($querys{Innodb_data_pending_reads}) },
	'Innodb_data_pending_writes' => sub { print query_database($querys{Innodb_data_pending_writes}) },
	'Innodb_data_read' => sub { print query_database($querys{Innodb_data_read}) },
	'Innodb_data_reads' => sub { print query_database($querys{Innodb_data_reads}) },
	'Innodb_data_writes' => sub { print query_database($querys{Innodb_data_writes}) },
	'Innodb_data_written' => sub { print query_database($querys{Innodb_data_written}) },
	'Innodb_dblwr_pages_written' => sub { print query_database($querys{Innodb_dblwr_pages_written}) },
	'Innodb_dblwr_writes' => sub { print query_database($querys{Innodb_dblwr_writes}) },
	'Innodb_log_waits' => sub { print query_database($querys{Innodb_log_waits}) },
	'Innodb_log_write_requests' => sub { print query_database($querys{Innodb_log_write_requests}) },
	'Innodb_log_writes' => sub { print query_database($querys{Innodb_log_writes}) },
	'Innodb_os_log_fsyncs' => sub { print query_database($querys{Innodb_os_log_fsyncs}) },
	'Innodb_os_log_pending_fsyncs' => sub { print query_database($querys{Innodb_os_log_pending_fsyncs}) },
	'Innodb_os_log_pending_writes' => sub { print query_database($querys{Innodb_os_log_pending_writes}) },
	'Innodb_os_log_written' => sub { print query_database($querys{Innodb_os_log_written}) },
	'Innodb_page_size' => sub { print query_database($querys{Innodb_page_size}) },
	'Innodb_pages_created' => sub { print query_database($querys{Innodb_pages_created}) },
	'Innodb_pages_read' => sub { print query_database($querys{Innodb_pages_read}) },
	'Innodb_pages_written' => sub { print query_database($querys{Innodb_pages_written}) },
	'Innodb_row_lock_current_waits' => sub { print query_database($querys{Innodb_row_lock_current_waits}) },
	'Innodb_row_lock_time' => sub { print query_database($querys{Innodb_row_lock_time}) },
	'Innodb_row_lock_time_avg' => sub { print query_database($querys{Innodb_row_lock_time_avg}) },
	'Innodb_row_lock_time_max' => sub { print query_database($querys{Innodb_row_lock_time_max}) },
	'Innodb_row_lock_waits' => sub { print query_database($querys{Innodb_row_lock_waits}) },
	'Innodb_rows_deleted' => sub { print query_database($querys{Innodb_rows_deleted}) },
	'Innodb_rows_inserted' => sub { print query_database($querys{Innodb_rows_inserted}) },
	'Innodb_rows_read' => sub { print query_database($querys{Innodb_rows_read}) },
	'Innodb_rows_updated' => sub { print query_database($querys{Innodb_rows_updated}) },
	'Key_blocks_not_flushed' => sub { print query_database($querys{Key_blocks_not_flushed}) },
	'Key_blocks_unused' => sub { print query_database($querys{Key_blocks_unused}) },
	'Key_blocks_used' => sub { print query_database($querys{Key_blocks_used}) },
	'Key_read_requests' => sub { print query_database($querys{Key_read_requests}) },
	'Key_reads' => sub { print query_database($querys{Key_reads}) },
	'Key_write_requests' => sub { print query_database($querys{Key_write_requests}) },
	'Key_writes' => sub { print query_database($querys{Key_writes}) },
	'Last_query_cost' => sub { print query_database($querys{Last_query_cost}) },
	'Max_used_connections' => sub { print query_database($querys{Max_used_connections}) },
	'Ndb_cluster_node_id' => sub { print query_database($querys{Ndb_cluster_node_id}) },
	'Ndb_config_from_host' => sub { print query_database($querys{Ndb_config_from_host}) },
	'Ndb_config_from_port' => sub { print query_database($querys{Ndb_config_from_port}) },
	'Ndb_number_of_data_nodes' => sub { print query_database($querys{Ndb_number_of_data_nodes}) },
	'Not_flushed_delayed_rows' => sub { print query_database($querys{Not_flushed_delayed_rows}) },
	'Open_files' => sub { print query_database($querys{Open_files}) },
	'Open_streams' => sub { print query_database($querys{Open_streams}) },
	'Open_tables' => sub { print query_database($querys{Open_tables}) },
	'Opened_tables' => sub { print query_database($querys{Opened_tables}) },
	'Prepared_stmt_count' => sub { print query_database($querys{Prepared_stmt_count}) },
	'Qcache_free_blocks' => sub { print query_database($querys{Qcache_free_blocks}) },
	'Qcache_free_memory' => sub { print query_database($querys{Qcache_free_memory}) },
	'Qcache_hits' => sub { print query_database($querys{Qcache_hits}) },
	'Qcache_inserts' => sub { print query_database($querys{Qcache_inserts}) },
	'Qcache_lowmem_prunes' => sub { print query_database($querys{Qcache_lowmem_prunes}) },
	'Qcache_not_cached' => sub { print query_database($querys{Qcache_not_cached}) },
	'Qcache_queries_in_cache' => sub { print query_database($querys{Qcache_queries_in_cache}) },
	'Qcache_total_blocks' => sub { print query_database($querys{Qcache_total_blocks}) },
	'Questions' => sub { print query_database($querys{Questions}) },
	'Rpl_status' => sub { print query_database($querys{Rpl_status}) },
	'Select_full_join' => sub { print query_database($querys{Select_full_join}) },
	'Select_full_range_join' => sub { print query_database($querys{Select_full_range_join}) },
	'Select_range' => sub { print query_database($querys{Select_range}) },
	'Select_range_check' => sub { print query_database($querys{Select_range_check}) },
	'Select_scan' => sub { print query_database($querys{Select_scan}) },
	'Slave_open_temp_tables' => sub { print query_database($querys{Slave_open_temp_tables}) },
	'Slave_retried_transactions' => sub { print query_database($querys{Slave_retried_transactions}) },
	'Slave_running' => sub { print query_database($querys{Slave_running}) },
	'Slow_launch_threads' => sub { print query_database($querys{Slow_launch_threads}) },
	'Slow_queries' => sub { print query_database($querys{Slow_queries}) },
	'Sort_merge_passes' => sub { print query_database($querys{Sort_merge_passes}) },
	'Sort_range' => sub { print query_database($querys{Sort_range}) },
	'Sort_rows' => sub { print query_database($querys{Sort_rows}) },
	'Sort_scan' => sub { print query_database($querys{Sort_scan}) },
	'Table_locks_immediate' => sub { print query_database($querys{Table_locks_immediate}) },
	'Table_locks_waited' => sub { print query_database($querys{Table_locks_waited}) },
	'Tc_log_max_pages_used' => sub { print query_database($querys{Tc_log_max_pages_used}) },
	'Tc_log_page_size' => sub { print query_database($querys{Tc_log_page_size}) },
	'Tc_log_page_waits' => sub { print query_database($querys{Tc_log_page_waits}) },
	'Threads_cached' => sub { print query_database($querys{Threads_cached}) },
	'Threads_connected' => sub { print query_database($querys{Threads_connected}) },
	'Threads_created' => sub { print query_database($querys{Threads_created}) },
	'Threads_running' => sub { print query_database($querys{Threads_running}) },
	'Uptime' => sub { print query_database($querys{Uptime}) },

) or die "$0: try --help for more information\n";


sub query_database {
	my $query = shift(@_);
	my $dbh = DBI->connect("dbi:mysql:dbname=$database;host=$hostname",$user,$pass);
	my $sth = $dbh->prepare("$query") or die $|;
	$sth->execute;

	while (my @array = $sth->fetchrow_array)  {
		return @array[1];
	}
    $sth->disconnect
}

sub usage {
    print << "__EOF__";
[-] $0 is a perl script designed to work with Zabbix to keep monitored MySQL databases
some features monitored are: threads, connection pool, size, buffers, locks, checkpoints.
Usage: $0 [--OPTION]
Mandatory arguments:
__EOF__

    while ( my($key, undef) = each %querys ) {
        print "\t--".$key."\n";
    } 
    exit 0
}

usage() unless defined(@ARGV);

# vim: ts=4 sw=4 sts=4 et ai nu nowrap bg=dark
